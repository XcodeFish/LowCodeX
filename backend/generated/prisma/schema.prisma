generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  username    String    @unique
  email       String    @unique
  password    String
  name        String?
  avatar      String?
  status      String    @default("active")
  tenantId    String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  lastLoginAt DateTime? @map("last_login_at")

  @@map("users")
}

model Role {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  tenantId    String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("roles")
}

model Permission {
  id          String   @id @default(uuid())
  name        String   @unique
  code        String   @unique
  description String?
  tenantId    String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("permissions")
}

model rolepermissions {
  A String
  B String

  @@unique([A, B], map: "_RolePermissions_AB_unique")
  @@index([B], map: "_RolePermissions_B_index")
  @@map("_rolepermissions")
}

model userroles {
  A String
  B String

  @@unique([A, B], map: "_UserRoles_AB_unique")
  @@index([B], map: "_UserRoles_B_index")
  @@map("_userroles")
}

model system_configs {
  id          String   @id @default(dbgenerated("(uuid())")) @db.VarChar(36)
  key         String   @unique @db.VarChar(100)
  value       String   @db.Text
  description String?  @db.Text
  isPublic    Boolean  @default(true)
  group       String   @default("system") @db.VarChar(50)
  createdAt   DateTime @db.DateTime(0)
  updatedAt   DateTime @db.DateTime(0)
}
